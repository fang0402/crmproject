/* * 文 件 名： * 版权(c) 2018-xxx公司 xxx项目组： * 版 本 号： */package com.csdj.crmproject.crmproject.controller.Sales.PaymentPlan;import com.alibaba.fastjson.JSON;import com.csdj.crmproject.crmproject.entity.ReCeiPlan;import com.csdj.crmproject.crmproject.service.Sales.PaymentPlan.PaymentPlanServer;import com.github.pagehelper.PageInfo;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import javax.annotation.Resource;import java.util.HashMap;import java.util.Map;/** * @author 贺芳 * @description: 收款计划 */@Controllerpublic class PaymentPlanController {    @Resource    private PaymentPlanServer paymentPlanServer;    /**     * 查询所有收款计划的跳转路径     * @return     */    @RequestMapping("payment_plan.html")    public String PlanManage(){        return "sales/PaymentPlan/payment_plan";    }    /**     * 添加收款计划的跳转路劲     * @return     */    @RequestMapping("add_plan.html")    public String addOrderHtml(){        return "sales/PaymentPlan/add_plan";    }    /**     * 修改收款计划的跳转路劲     * @param pkRePlanId     * @param model     * @return     */    @RequestMapping("update_plan.html")    public String updatePlanHtml(long pkRePlanId, Model model){        ReCeiPlan plan=paymentPlanServer.findGetPlanId(pkRePlanId);        model.addAttribute("plan",plan);        return "sales/PaymentPlan/update_plan";    }    @RequestMapping("find_plan.htmls")    @ResponseBody    public String findOrder(@RequestParam(value = "page", required = false, defaultValue = "1") int pageNum,                            @RequestParam(value = "limit", required = false, defaultValue = "8") int pageSize,                            @RequestParam(value ="rePlanCurrentState",required = false) String rePlanCurrentState){        PageInfo<ReCeiPlan> pageInfo=paymentPlanServer.findPlan(pageNum, pageSize,rePlanCurrentState);        String jsonString = JSON.toJSONString(pageInfo.getList());        System.out.println(jsonString);        int count=paymentPlanServer.orderCount(rePlanCurrentState);        String layuiJson = "{\"code\":0,\"msg\":\"\",\"count\":" + 2 + ",\"data\":" + jsonString + "}";// 转换成layui数据表格的值格式        return layuiJson;    }    /**     * 添加收款计划     * @param reCeiPlan     * @return 受影响的行数     */    @RequestMapping("add_plan_htmls")    @ResponseBody    public int addPlan(ReCeiPlan reCeiPlan){        int plan=paymentPlanServer.addPlan(reCeiPlan);        return plan;    }    /**     * 修改收款计划     * @param reCeiPlan     * @return     */    @RequestMapping("update_plan_htmlss")    @ResponseBody    public int updatePlan(ReCeiPlan reCeiPlan){        int plan=paymentPlanServer.updatePlan(reCeiPlan);        return plan;    }    /**     * 删除收款计划记录     * @param array     * @return     */    @RequestMapping("delete_plan.htmls")    @ResponseBody    public Object deletePlan(int[] array){        int i = paymentPlanServer.deletePlan(array);        Map<String, Object> map = new HashMap<>();        if (i > 0) {            map.put("show", "success");        } else {            map.put("show", "fail");        }        return map;    }}